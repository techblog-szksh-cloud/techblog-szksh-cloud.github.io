"use strict";(self.webpackChunktechblog_szksh_cloud_github_io=self.webpackChunktechblog_szksh_cloud_github_io||[]).push([[2136],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},f=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,f=i(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,d=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(d,l(l({ref:t},f),{},{components:n})):a.createElement(d,l({ref:t},f))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9631:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],i={title:"skaffold \u3092\u4f7f\u3063\u3066 GitOps \u3059\u308b",date:new Date("2021-01-11T07:24:44.000Z"),archives:["2021/01"],tags:["skaffold","gitops","k8s"]},p=void 0,s={permalink:"/gitops-skaffold",source:"@site/blog/gitops-skaffold.md",title:"skaffold \u3092\u4f7f\u3063\u3066 GitOps \u3059\u308b",description:"skaffold \u3092\u7528\u3044\u3066\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u52d5\u7684\u306b\u751f\u6210\u3057\u3064\u3064 GitOps \u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002",date:"2021-01-11T07:24:44.000Z",formattedDate:"January 11, 2021",tags:[{label:"skaffold",permalink:"/tags/skaffold"},{label:"gitops",permalink:"/tags/gitops"},{label:"k8s",permalink:"/tags/k-8-s"}],readingTime:4.725,truncated:!1,authors:[],frontMatter:{title:"skaffold \u3092\u4f7f\u3063\u3066 GitOps \u3059\u308b",date:"2021-01-11T07:24:44.000Z",archives:["2021/01"],tags:["skaffold","gitops","k8s"]},prevItem:{title:"terraformer \u3067\u96d1\u306b\u751f\u6210\u3057\u305f tf \u30d5\u30a1\u30a4\u30eb \u3068 state \u3092\u5206\u5272\u3057\u305f\u304f\u3066\u30c4\u30fc\u30eb\u3092\u66f8\u3044\u305f",permalink:"/tfmigrator"},nextItem:{title:"tfnotify \u3092 fork \u3057\u305f",permalink:"/fork-tfnotify"}},f={authorsImageUrls:[]},u=[{value:"How",id:"how",level:2},{value:"\u3055\u3044\u3054\u306b",id:"\u3055\u3044\u3054\u306b",level:2}],c={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"skaffold \u3092\u7528\u3044\u3066\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u52d5\u7684\u306b\u751f\u6210\u3057\u3064\u3064 GitOps \u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u306a\u304a\u3001\u73fe\u6642\u70b9\u3067\u306f\u3042\u304f\u307e\u3067\u8003\u3048\u3066\u307f\u305f\u3060\u3051\u3067\u5b9f\u969b\u306b\u5c0e\u5165\u3057\u305f\u308a\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002"),(0,o.kt)("p",null,"GitOps \u306f\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092 Git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30b3\u30df\u30c3\u30c8\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u308f\u3051\u3067\u3059\u304c\u3001\nDocker image \u3092\u30d3\u30eb\u30c9\u3001\u30d7\u30c3\u30b7\u30e5\u3057\u3001\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u306e image tag \u3092\u66f8\u304d\u63db\u3048\u308b\u3068\u3044\u3046\u4e00\u9023\u306e\u51e6\u7406\u3092\u3069\u3046\u3084\u3063\u3066\u3084\u308b\u306e\u304c\u3044\u3044\u306e\u304b\n\u500b\u4eba\u7684\u306b\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u3002"),(0,o.kt)("p",null,"\u81ea\u5206\u306f FluxCD \u306b\u306f\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\nFluxCD \u3067\u306f registry \u3092\u30dd\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u81ea\u52d5\u3067\u6700\u65b0\u306e\u30bf\u30b0\u306b\u66f8\u304d\u63db\u3048\u308b\u6a5f\u80fd\u304c\u3042\u308b\u305d\u3046\u3067\u3059\u306d\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://toolkit.fluxcd.io/guides/image-update/"},"https://toolkit.fluxcd.io/guides/image-update/")),(0,o.kt)("p",null,"\u305f\u3060\u3057\u3001\u307e\u3060 alpha \u3067\u3042\u308b\u3053\u3068\u3068\u3001 semver \u306b\u5f93\u3063\u3066\u3044\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u3053\u308c\u3060\u3068 master branch \u304c update \u3055\u308c\u308b\u305f\u3073\u306b image \u3092\u30d3\u30eb\u30c9\u3057\u3066 sha \u3067\u30bf\u30b0\u3092\u4ed8\u4e0e\u3059\u308b\u307f\u305f\u3044\u306a\u904b\u7528\u306f\u96e3\u3057\u305d\u3046\u3067\u3059\u3002"),(0,o.kt)("p",null,"Skaffold \u3060\u3068\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u306e image tag \u3092\u81ea\u52d5\u3067\u66f8\u304d\u63db\u3048\u3066\u304f\u308c\u308b\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\n\u52a0\u3048\u3066 ",(0,o.kt)("a",{parentName:"p",href:"https://skaffold.dev/docs/references/cli/#skaffold-render"},"skaffold render")," \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u3068 manifest \u306e apply \u306f\u305b\u305a\u306b\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u51fa\u529b\u3060\u3051\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\u51fa\u529b\u3055\u308c\u305f manifest \u3092 Git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b commit, push \u3059\u308c\u3070 GitOps \u304c\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3067\u3059\u3002"),(0,o.kt)("h2",{id:"how"},"How"),(0,o.kt)("p",null,"\u30ea\u30dd\u30b8\u30c8\u30ea\u3092 2 \u3064\u7528\u610f\u3057\u307e\u3059\u3002"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"app: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u3068\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u7ba1\u7406\u3059\u308b\u30ea\u30dd\u30b8\u30c8\u30ea"),(0,o.kt)("li",{parentName:"ul"},"manifest: GitOps \u304c\u9023\u643a\u3059\u308b\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u7ba1\u7406\u3059\u308b\u30ea\u30dd\u30b8\u30c8\u30ea")),(0,o.kt)("p",null,"app \u306f Monorepo \u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u3044\u307e\u3059\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"services/\n  foo/\n    skaffold.yaml\n    Dockerfile\n    kubernetes/\n      base/\n        kustomization.yaml\n        deployment.yaml\n      overlays/\n        develop/\n          kustomization.yaml\n        production/\n          kustomization.yaml\n")),(0,o.kt)("p",null,"skaffold.yaml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"---\napiVersion: skaffold/v2beta10\nkind: Config\nbuild:\n  tagPolicy:\n    gitCommit:\n      prefix: develop-\n  artifacts:\n  - image: foo\ndeploy:\n  kustomize:\n    paths:\n    - kubernetes/overlays/develop\nprofiles:\n- name: production\n  build:\n    tagPolicy:\n      gitCommit:\n        prefix: production-\n  deploy:\n    kustomize:\n      paths:\n      - kubernetes/overlays/production\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://skaffold.dev/docs/environment/profiles/"},"profile")," \u306b\u3088\u3063\u3066 develop \u3068 production \u3092\u533a\u5225\u3057\u3066\u3044\u307e\u3059\u3002"),(0,o.kt)("p",null,"manifest \u3067\u306f tag \u3092\u6307\u5b9a\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"    spec:\n      containers:\n      - name: foo\n        image: foo\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"skaffold render")," \u3067 manifest \u3092\u751f\u6210\u3057\u307e\u3059\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ skaffold render \\\n  -p production \\\n  --default-repo xxx.dkr.ecr.ap-northeast-1.amazonaws.com \\\n  --offline=true \\\n  --loud=true \\\n  --output manifest.yaml\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"--loud=true")," \u3092\u3064\u3051\u306a\u3044\u3068\u306a\u306b\u3082\u51fa\u529b\u3057\u306a\u3044\u306e\u3067\u306a\u306b\u304c\u8d77\u3053\u3063\u3066\u308b\u306e\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002"),(0,o.kt)("p",null,"\u751f\u6210\u3055\u308c\u305f\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u307f\u308b\u3068 tag \u304c\u81ea\u52d5\u3067\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"      - image: xxx.dkr.ecr.ap-northeast-1.amazonaws.com/foo:production-e3a42e0@sha256:7032af912c511ab0c8353c28604461d8960833144953fb50853f087db55ffdd0\n")),(0,o.kt)("p",null,"\u751f\u6210\u3057\u305f manifest \u3092 ",(0,o.kt)("inlineCode",{parentName:"p"},"manifest")," \u30ea\u30dd\u30b8\u30c8\u30ea\u306b commit, push \u3057\u307e\u3059\u3002\nmanifest \u30ea\u30dd\u30b8\u30c8\u30ea\u3092 checkout \u3057\u3066\u304d\u3066 git \u30b3\u30de\u30f3\u30c9\u3067\u3084\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/int128/ghcp"},"ghcp")," \u3092\u4f7f\u3046\u3068\u30b3\u30de\u30f3\u30c91\u3064\u3067\u3067\u304d\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002"),(0,o.kt)("p",null,"manifest \u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u5bfe\u8c61\u306e\u30b5\u30fc\u30d3\u30b9\u53ca\u3073\u74b0\u5883\u3054\u3068\u306b\u30d6\u30e9\u30f3\u30c1\u3092\u5206\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u305d\u3046\u3057\u305f\u307b\u3046\u304c push \u306e\u969b\u306b\u5931\u6557\u3057\u306b\u304f\u3044\u3068\u601d\u3044\u307e\u3059(\u591a\u5206\u3002\u5206\u304b\u3089\u306a\u3044\u3051\u3069)\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ ghcp commit -u suzuki-shunsuke -r manifest -b "foo/production" -m "message" manifest.yaml\n')),(0,o.kt)("p",null,"message \u306f\u5b9f\u969b\u306b\u306f\u3082\u3063\u3068\u8a73\u7d30\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3059\u3079\u304d\u3067\u3057\u3087\u3046\u3002 CI \u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3046\u306e\u3067\u3001 build URL \u3092\u542b\u3081\u305f\u308a\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002"),(0,o.kt)("p",null,"\u3053\u3046\u3059\u308b\u3068 ",(0,o.kt)("inlineCode",{parentName:"p"},"foo/production")," \u30d6\u30e9\u30f3\u30c1\u306b manifest.yaml \u304c push \u3055\u308c\u307e\u3059\u3002\n\u3042\u3068\u306f ArgoCD \u3084 FluxCD \u306e\u3088\u3046\u306a GitOps \u30c4\u30fc\u30eb \u3067 foo/production \u306e manifest.yaml \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308c\u3070\u3088\u3044\u306f\u305a\u3067\u3059\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: foo\n  namespace: argocd\nspec:\n  source:\n    repoURL: https://github.com/suzuki-shunsuke/manifest.git\n    targetRevision: foo/production\n    path: manifest.yaml\n  destination:\n    server: https://kubernetes.default.svc\n    namespace: production\n")),(0,o.kt)("h2",{id:"\u3055\u3044\u3054\u306b"},"\u3055\u3044\u3054\u306b"),(0,o.kt)("p",null,"\u4ee5\u4e0a\u3001 Skaffold \u3092\u4f7f\u3063\u3066\u3044\u3044\u611f\u3058\u306b tag \u3092\u66f8\u304d\u63db\u3048\u3066 GitOps \u3059\u308b\u4ed5\u7d44\u307f\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\nSkaffold \u4f7f\u3046\u3068 Docker image \u306e build, push \u3068\u3044\u3063\u305f\u4e00\u9023\u306e\u6d41\u308c\u3082\u5168\u90e8\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u3067\u697d\u3067\u826f\u3044\u306a\u3068\u611f\u3058\u307e\u3057\u305f\u3002"),(0,o.kt)("p",null,"GitOps \u3058\u3083\u306a\u304f\u3066\u3082 CIOps \u3067\u3082 Skaffold \u3067\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u4fbf\u5229\u305d\u3046\u3060\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u305d\u306e\u5834\u5408\u306f ",(0,o.kt)("inlineCode",{parentName:"p"},"skaffold render")," \u3067\u306f\u306a\u304f\u3001 ",(0,o.kt)("a",{parentName:"p",href:"https://skaffold.dev/docs/references/cli/#skaffold-run"},"skaffold run")," \u306b\u306a\u308a\u305d\u3046\u3067\u3059\u306d\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://skaffold.dev/docs/workflows/ci-cd/"},"https://skaffold.dev/docs/workflows/ci-cd/")))}m.isMDXComponent=!0}}]);