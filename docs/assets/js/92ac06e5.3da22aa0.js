"use strict";(self.webpackChunktechblog_szksh_cloud_github_io=self.webpackChunktechblog_szksh_cloud_github_io||[]).push([[2962],{3905:(e,i,t)=>{t.d(i,{Zo:()=>u,kt:()=>g});var c=t(7294);function n(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e}function r(e,i){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);i&&(c=c.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),t.push.apply(t,c)}return t}function l(e){for(var i=1;i<arguments.length;i++){var t=null!=arguments[i]?arguments[i]:{};i%2?r(Object(t),!0).forEach((function(i){n(e,i,t[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(t,i))}))}return e}function o(e,i){if(null==e)return{};var t,c,n=function(e,i){if(null==e)return{};var t,c,n={},r=Object.keys(e);for(c=0;c<r.length;c++)t=r[c],i.indexOf(t)>=0||(n[t]=e[t]);return n}(e,i);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(c=0;c<r.length;c++)t=r[c],i.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var a=c.createContext({}),s=function(e){var i=c.useContext(a),t=i;return e&&(t="function"==typeof e?e(i):l(l({},i),e)),t},u=function(e){var i=s(e.components);return c.createElement(a.Provider,{value:i},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var i=e.children;return c.createElement(c.Fragment,{},i)}},m=c.forwardRef((function(e,i){var t=e.components,n=e.mdxType,r=e.originalType,a=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(t),m=n,g=p["".concat(a,".").concat(m)]||p[m]||f[m]||r;return t?c.createElement(g,l(l({ref:i},u),{},{components:t})):c.createElement(g,l({ref:i},u))}));function g(e,i){var t=arguments,n=i&&i.mdxType;if("string"==typeof e||n){var r=t.length,l=new Array(r);l[0]=m;var o={};for(var a in i)hasOwnProperty.call(i,a)&&(o[a]=i[a]);o.originalType=e,o[p]="string"==typeof e?e:n,l[1]=o;for(var s=2;s<r;s++)l[s]=t[s];return c.createElement.apply(null,l)}return c.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3798:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>f,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var c=t(7462),n=(t(7294),t(3905));const r={title:"Splitting .circleci/config.yml",date:new Date("2020-11-07T05:43:10.000Z"),tags:["circleci","oss"],authors:["suzuki-shunsuke"]},l=void 0,o={permalink:"/splitting-circleci-config",source:"@site/blog/splitting-circleci-config.md",title:"Splitting .circleci/config.yml",description:"In this post I introduce how to split a huge .circleci/config.yml.",date:"2020-11-07T05:43:10.000Z",formattedDate:"November 7, 2020",tags:[{label:"circleci",permalink:"/tags/circleci"},{label:"oss",permalink:"/tags/oss"}],readingTime:2.54,truncated:!1,authors:[{name:"Shunsuke Suzuki",title:"Platform Engineer / OSS Developer / Go / Terraform",url:"https://github.com/suzuki-shunsuke",imageURL:"https://github.com/suzuki-shunsuke.png",key:"suzuki-shunsuke"}],frontMatter:{title:"Splitting .circleci/config.yml",date:"2020-11-07T05:43:10.000Z",tags:["circleci","oss"],authors:["suzuki-shunsuke"]},prevItem:{title:"\u4ed5\u4e8b\u3067\u3084\u3063\u305f\u3053\u3068 2019-10-01 ~ 2019-12-31",permalink:"/2019/10/01/job-12-31"},nextItem:{title:"github-ci-monitor: CI \u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092 DataDog \u3067\u76e3\u8996",permalink:"/github-ci-monitor"}},a={authorsImageUrls:[void 0]},s=[{value:"circleci config pack",id:"circleci-config-pack",level:2},{value:"circleci-config-merge",id:"circleci-config-merge",level:2},{value:"Test .circleci/config.yml in CI",id:"test-circleciconfigyml-in-ci",level:2},{value:"Use case",id:"use-case",level:2},{value:"Conclusion",id:"conclusion",level:2}],u={toc:s},p="wrapper";function f(e){let{components:i,...t}=e;return(0,n.kt)(p,(0,c.Z)({},u,t,{components:i,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"In this post I introduce how to split a huge ",(0,n.kt)("inlineCode",{parentName:"p"},".circleci/config.yml"),"."),(0,n.kt)("p",null,"CircleCI doesn't support to split .circleci/config.yml, so we manage all workflows and jobs configuration into one file .circleci/config.yml.\nIf the repository is ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Monorepo"},"Monorepo"),", the more the number of services increases, the more the size of .circleci/config.yml becomes large and it's hard to maintain .circleci/config.yml.\nBy splitting .circleci/config.yml per service, it makes easy to maintain .circleci/config.yml and we can configure split file's ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/about-code-owners"},"CODEOWNERS"),"."),(0,n.kt)("p",null,"To split .circleci/config.yml, you have to generate .circleci/config.yml by merging split files and commit both split files and .circleci/config.yml."),(0,n.kt)("h2",{id:"circleci-config-pack"},"circleci config pack"),(0,n.kt)("p",null,"We can merge split files with the command ",(0,n.kt)("inlineCode",{parentName:"p"},"circleci config pack"),", but I introduce the other tool ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/circleci-config-merge"},"circleci-config-merge"),"."),(0,n.kt)("p",null,"CircleCI CLI is an official tool so it's reliable, but I feel the restriction of the file name and the directory structure is a little strict.\nWe have to manage all files on the same directory, and the file path is reflected to generated YAML content."),(0,n.kt)("p",null,"For the detail of ",(0,n.kt)("inlineCode",{parentName:"p"},"circleci config pack"),", please see the official document."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://circleci.com/docs/2.0/local-cli/#packing-a-config"},"https://circleci.com/docs/2.0/local-cli/#packing-a-config")),(0,n.kt)("p",null,"If you can accept the restriction of ",(0,n.kt)("inlineCode",{parentName:"p"},"circleci config pack"),", I recommend to use it because it is an official tool.\nBut if it is difficult to accept the restriction, maybe ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/circleci-config-merge"},"circleci-config-merge")," would help you."),(0,n.kt)("h2",{id:"circleci-config-merge"},"circleci-config-merge"),(0,n.kt)("p",null,"circleci-config-merge is a CLI tool to generate .circleci/config.yml by merging split files."),(0,n.kt)("p",null,"The usage of circleci-config-merge is like the following."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"$ circleci-config-merge merge <file1> [<file2> ...]\n")),(0,n.kt)("p",null,"There is no restriction of file paths, and the format of split file is same as .circleci/config.yml."),(0,n.kt)("p",null,"For example, you can manage files on the same directory."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},".circleci/\n  config.yml # generated\n  src/\n    service1.yml # split config per service\n    service2.yml\n    ...\n")),(0,n.kt)("p",null,"Or you can also manage files on each service directory."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"service1/\n  circleci/\n    workflow.yml # you can split file freely\n    jobs.yml\n  ...\nservice2/\n  circleci/\n    config.yml\n  ...\n...\n")),(0,n.kt)("p",null,"circleci-config-merge merges the list of workflow jobs."),(0,n.kt)("p",null,"For example,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"workflows:\n  build:\n    jobs:\n    - foo\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"workflows:\n  build:\n    jobs:\n    - bar\n")),(0,n.kt)("p",null,"The workflow ",(0,n.kt)("inlineCode",{parentName:"p"},"build"),"'s jobs are merged as the following."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"workflows:\n  build:\n    jobs: # sort by job name for comparison\n    - bar\n    - foo\n")),(0,n.kt)("h2",{id:"test-circleciconfigyml-in-ci"},"Test .circleci/config.yml in CI"),(0,n.kt)("p",null,"If you split .circleci/config.yml, you should test in CI whether .circleci/config.yml is generated by merging split files.\ncircleci-config-merge doesn't provide such a feature, but you can implement the test with the other tool like ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/homeport/dyff"},"dyff"),"."),(0,n.kt)("p",null,"I have created an example repository ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/example-circleci-config-merge"},"suzuki-shunsuke/example-circleci-config-merge"),".\nYou can use this example as a reference to split .circleci/config.yml and setup CI."),(0,n.kt)("h2",{id:"use-case"},"Use case"),(0,n.kt)("p",null,"Lastly, I introduce a use case of circleci-config-merge.\nRecently, I split a huge .circleci/config.yml which is over 6,000 lines to about 60 files.\nIt was hard to maintain the original .circleci/config.yml, but by splitting it became easy to maintain .circleci/config.yml.\nIf you are suffer from a huge .circleci/config.yml, let's split it!"),(0,n.kt)("h2",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"In this post I introduced how to split a huge .circleci/config.yml.\nWe can generate .circleci/config.yml by merging split files with ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/circleci-config-merge"},"circleci-config-merge"),".\nPlease see the example ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/example-circleci-config-merge"},"suzuki-shunsuke/example-circleci-config-merge")," as a reference to split .circleci/config.yml and setup CI."))}f.isMDXComponent=!0}}]);