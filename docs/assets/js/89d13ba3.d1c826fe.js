"use strict";(self.webpackChunktechblog_szksh_cloud_github_io=self.webpackChunktechblog_szksh_cloud_github_io||[]).push([[2630],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),i=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=i(e.components);return r.createElement(a.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,a=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=i(t),d=o,k=m["".concat(a,".").concat(d)]||m[d]||c[d]||l;return t?r.createElement(k,s(s({ref:n},p),{},{components:t})):r.createElement(k,s({ref:n},p))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,s=new Array(l);s[0]=d;var u={};for(var a in n)hasOwnProperty.call(n,a)&&(u[a]=n[a]);u.originalType=e,u[m]="string"==typeof e?e:o,s[1]=u;for(var i=2;i<l;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5712:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>i});var r=t(7462),o=(t(7294),t(3905));const l={title:".drone.jsonnet \u3068 .drone.yml \u3092\u6bd4\u8f03\u3059\u308b Drone plugin \u3092\u4f5c\u3063\u305f",date:new Date("2019-05-31T23:34:10.000Z"),tags:["drone"],authors:["suzuki-shunsuke"]},s=void 0,u={permalink:"/drone-plugin-jsonnet-check",source:"@site/blog/drone-plugin-jsonnet-check.md",title:".drone.jsonnet \u3068 .drone.yml \u3092\u6bd4\u8f03\u3059\u308b Drone plugin \u3092\u4f5c\u3063\u305f",description:"\u4e45\u3057\u3076\u308a\u306b Drone plugin \u3092\u4f5c\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002",date:"2019-05-31T23:34:10.000Z",formattedDate:"May 31, 2019",tags:[{label:"drone",permalink:"/tags/drone"}],readingTime:2.84,truncated:!1,authors:[{name:"Shunsuke Suzuki",title:"Platform Engineer / OSS Developer / Go / Terraform",url:"https://github.com/suzuki-shunsuke",imageURL:"https://github.com/suzuki-shunsuke.png",key:"suzuki-shunsuke"}],frontMatter:{title:".drone.jsonnet \u3068 .drone.yml \u3092\u6bd4\u8f03\u3059\u308b Drone plugin \u3092\u4f5c\u3063\u305f",date:"2019-05-31T23:34:10.000Z",tags:["drone"],authors:["suzuki-shunsuke"]},prevItem:{title:"Drone v0.8 \u306e .drone.yml \u3092 v1 \u306e .drone.jsonnet \u306b\u5909\u63db\u3059\u308b\u30c4\u30fc\u30eb\u3092\u4f5c\u3063\u305f",permalink:"/drone-jsonnet-generator"},nextItem:{title:"go-jsoneq - 2\u3064\u306e\u5024\u304cJSON\u3068\u3057\u3066\u7b49\u3057\u3044\u304b\u6bd4\u8f03\u3059\u308bGo\u30e9\u30a4\u30d6\u30e9\u30ea",permalink:"/go-jsoneq"}},a={authorsImageUrls:[void 0]},i=[],p={toc:i};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u4e45\u3057\u3076\u308a\u306b ",(0,o.kt)("a",{parentName:"p",href:"https://docs.drone.io/plugins/"},"Drone plugin")," \u3092\u4f5c\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.github.com/suzuki-shunsuke/drone-plugin-jsonnet-check"},"https://www.github.com/suzuki-shunsuke/drone-plugin-jsonnet-check")),(0,o.kt)("p",null,".drone.jsonnet \u304b\u3089 .drone.yml \u3092\u751f\u6210\u3057\u3066\u3044\u3066\u3001\u4e21\u65b9\u3092 Git \u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u3001\n.drone.jsonnet \u3068 .drone.yml \u306e\u72b6\u614b\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306e plugin \u3067\u3059\u3002"),(0,o.kt)("p",null,"Drone v1 \u3067\u306f matrix builds \u304c\u5ec3\u6b62\u3055\u308c\u3001multiple pipeline \u304c\u5c0e\u5165\u3055\u308c\u307e\u3057\u305f\u3002\nmatrix builds \u3092 ",(0,o.kt)("inlineCode",{parentName:"p"},"drone convert")," \u30b3\u30de\u30f3\u30c9\u3067 multiple pipeline \u306b\u5909\u63db\u3059\u308b\u3068\u3001pipeline \u306e\u6570\u304c\u591a\u3044\u307b\u3069\u5197\u9577\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u6027\u304c\u60aa\u304f\u306a\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u516c\u5f0f\u3067\u306f ",(0,o.kt)("a",{parentName:"p",href:"https://jsonnet.org"},"jsonnet")," \u3067\u8a18\u8ff0\u3057\u3066 .drone.yml \u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.drone.io/user-guide/pipeline/migrating/"},"https://docs.drone.io/user-guide/pipeline/migrating/")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"To simplify your configuration we recommend using jsonnet.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ drone jsonnet --format --stream\n")),(0,o.kt)("p",null,"jsonnet \u304b\u3089 yaml \u3078\u306e\u5909\u63db\u306f ",(0,o.kt)("a",{parentName:"p",href:"https://docs.drone.io/extend/config/jsonnet/"},"Jsonnet extension")," \u3092\u4f7f\u3046\u3068 Drone \u304c\u30d3\u30eb\u30c9\u5b9f\u884c\u6642\u306b\u81ea\u52d5\u3067\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u306e\u3067 .drone.yml \u3092\u7ba1\u7406\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u306a\u308a\u307e\u3059\u304c\u3001\n\u4f7f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001 .drone.jsonnet \u3068 .drone.yml \u3092 Git \u3067\u7ba1\u7406\u3057\u3001\u81ea\u524d\u3067\u5909\u63db\u3057\u3066\u30b3\u30df\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u4f5c\u696d\u3092\u306a\u306b\u304b\u3057\u3089\u81ea\u52d5\u5316\u3057\u306a\u3044\u3068 .drone.jsonnet \u3068 .drone.yml \u306b\u4e0d\u6574\u5408\u304c\u751f\u3058\u308b\u3053\u3068\u3082\u3042\u308a\u5f97\u308b\u3068\u601d\u3044\u307e\u3059\u3002"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},".drone.jsonnet \u3092\u66f4\u65b0\u3057\u305f\u3051\u3069 .drone.yml \u3092\u66f4\u65b0\u3057\u5fd8\u308c\u308b"),(0,o.kt)("li",{parentName:"ul"},".drone.yml \u3092\u76f4\u63a5\u66f4\u65b0\u3057\u3066\u3057\u307e\u3063\u305f")),(0,o.kt)("p",null,"\u305d\u3053\u3067 CI \u3067\u4e0d\u6574\u5408\u304c\u751f\u3058\u3066\u3044\u306a\u3044\u304b\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306e plugin \u3092\u4f5c\u308a\u307e\u3057\u305f\u3002"),(0,o.kt)("p",null,"\u6700\u521d\u306f plugin \u3067\u306f\u306a\u304f\u3001\u305f\u3060\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3068\u3057\u3066\u516c\u958b\u3057\u307e\u3057\u305f\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/drone-jsonnet-convert-test"},"https://github.com/suzuki-shunsuke/drone-jsonnet-convert-test")),(0,o.kt)("p",null,"\u3057\u304b\u3057\u3001\u6298\u89d2\u306a\u306e\u3067 plugin \u306b\u3057\u307e\u3057\u305f\u3002"),(0,o.kt)("p",null,"\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5358\u7d14\u3067\u3001 .drone.jsonnet \u304b\u3089 YAML \u3092\u751f\u6210\u3057\u3001 .drone.yml \u3068 diff \u3092\u53d6\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002"),(0,o.kt)("p",null,"\u4f7f\u3044\u65b9\u306f README \u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"drone jsonnet")," \u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092 plugin \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6e21\u305b\u307e\u3059\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsonnet"},'{\n  kind: "pipeline",\n  name: "test",\n  steps: [\n    {\n      name: "test .drone.yml",\n      image: "suzukishunsuke/jsonnet-check:v1.1.1-v0.1.0",\n      settings: {\n        format: true,\n      },\n    },\n  ],\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ drone exec\n[test .drone.yml:0] + drone jsonnet --format --target /tmp/.drone.yml\n[test .drone.yml:1] + diff .drone.yml /tmp/.drone.yml\n[test .drone.yml:2] --- .drone.yml\n[test .drone.yml:3] +++ /tmp/.drone.yml\n[test .drone.yml:4] @@ -12,5 +12,4 @@\n[test .drone.yml:5]    settings:\n[test .drone.yml:6]      format: true\n[test .drone.yml:7]\n[test .drone.yml:8] -\n[test .drone.yml:9]  ...\n2019/06/01 00:33:27 test .drone.yml : exit code 1\n")),(0,o.kt)("p",null,"\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u3067\u306f ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bats-core/bats-core"},"bats")," \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002"),(0,o.kt)("p",null,"\u4ee5\u4e0a\u3001\u7c21\u5358\u3067\u3059\u304c\u3001\u81ea\u4f5c Drone plugin \u306e\u7d39\u4ecb\u3067\u3057\u305f\u3002"))}m.isMDXComponent=!0}}]);