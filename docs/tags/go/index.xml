<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on melody</title>
    <link>https://techblog.szksh.cloud/tags/go/</link>
    <description>Recent content in go on melody</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Sun, 21 Jul 2019 18:13:53 +0900</lastBuildDate><atom:link href="https://techblog.szksh.cloud/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Top 10 Most Common Mistakes I’ve Seen in Go Projects を読んでみて</title>
      <link>https://techblog.szksh.cloud/the-top-10-most-common-mistakes-ive-seen-in-go-projects/</link>
      <pubDate>Sun, 21 Jul 2019 18:13:53 +0900</pubDate>
      
      <guid>https://techblog.szksh.cloud/the-top-10-most-common-mistakes-ive-seen-in-go-projects/</guid>
      <description>The Top 10 Most Common Mistakes I’ve Seen in Go Projects という記事を読んで面白かったのでメモります。 翻訳ではないです。メモなので、原文を読んでください。
 Unknown Enum Value: Unknown であることを表す enum の値は 0 にしよう。値がセットされていない場合に Unknown として扱えるから Benchmarking: ベンチマークを取るのは難しい。コンパイラの最適化によってベンチマークの結果が不適切になる場合がある Pointers! Pointers Everywhere!: パフォーマンスの観点から基本的にはポインタを使うべきではない。変数を共有する必要がある場合のみ、ポインタを使う Breaking a for/switch or a for/select: for, switch が入れ子になっている場合、switch の中で break しても for から抜けられない。抜けたければ labeled break を使う Errors Management Slice Initialization Context Management Not Using the -race Option: go test コマンドでは -race オプションをつけよう Using a Filename as an Input: 引数としてファイル名を渡すのではなく、 io.</description>
    </item>
    
  </channel>
</rss>
