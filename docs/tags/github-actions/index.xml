<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github-actions on melody</title>
    <link>https://techblog.szksh.cloud/tags/github-actions/</link>
    <description>Recent content in github-actions on melody</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Sun, 25 Apr 2021 16:09:47 +0900</lastBuildDate><atom:link href="https://techblog.szksh.cloud/tags/github-actions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PR で変更されたファイルや PR Label に応じて matrix build を実行する Github Actions の Workflow のサンプルを書いてみた</title>
      <link>https://techblog.szksh.cloud/example-github-actions-dynamic-matrix/</link>
      <pubDate>Sun, 25 Apr 2021 16:09:47 +0900</pubDate>
      
      <guid>https://techblog.szksh.cloud/example-github-actions-dynamic-matrix/</guid>
      <description>GitHub Actions の勉強がてら Pull Request (以下 PR) で変更されたファイルや PR Label に応じて Matrix build を実行する Github Actions の Workflow のサンプルを書いてみました。
https://github.com/suzuki-shunsuke/example-github-actions-dynamic-matrix
Monorepo で同じ Job を PR で変更されたものに対してだけ実行したい、 けど workflow をサービスごとに定義するのはめんどいみたいな場合に使えるかもしれません。
勉強がてらちょっと書いてみて軽く動作確認しただけなので、バグってる、あるいは実用的ではないかもしれません。
ここでは Monorepo の CI を GitHub Actions で実行する場合を考えます。
GitHub Actions では path filter を用いて workflow の実行有無を制御することができます。 そこでサービスごとに workflow を作成し、 path filter を設定することでそのサービスが更新されたときのみそのサービスの CI を実行するということが簡単にできます。
しかし多くのサービスが含まれる Monorepo で各サービスに同じ Job を実行したい場合を考えてみましょう。 その場合サービスを追加するたびに workflow を追加していく必要があります。 まぁ .github/workflows 配下に 1 つ YAML をコピペで作成するだけといえばそれまでなのですが、それすらも省略したいとしましょう。
Terraform の CI/CD を CodeBuild に移行した話では CodeBuild の Batch Build の buildspec を PR で変更されたファイルおよび PR Label に応じて動的に生成しています。 これの良いところは、サービスを追加したり、リネームしたり、削除したりしても CI をイジる必要がまったくないところです。</description>
    </item>
    
  </channel>
</rss>
